package integration.pipelines.declarative

node("TestSlave") {
    def serverId = "Artifactory-1"
    def releaseBundleName = "declarative:createDistributeDelete"
    def releaseBundleVersion = "1"
    def releaseBundleSpec = """{
      "files": [
        {
          "pattern": "${LOCAL_REPO1}/"
        }
     ]
    }"""
    def distRules = """{
      "distribution_rules": [
        {
          "site_name": "*",
          "city_name": "*",
          "country_codes": ["*"]
        }
      ]
    }"""

    stage "Configuration"
    jfrogInstance(
            id: serverId,
            url: "${env.JENKINS_PLATFORM_URL}",
            username: "${env.JENKINS_ARTIFACTORY_USERNAME}",
            password: "${env.JENKINS_ARTIFACTORY_PASSWORD}"
    )

    stage "Upload files"
    rtUpload(
            serverId: serverId,
            spec: """{
              "files": [
                {
                  "pattern": "${FILES_DIR}",
                  "target": "${LOCAL_REPO1}/",
                  "recursive": "false"
                }
             ]
            }"""
    )

    stage "Create a release bundle"
    dsCreateReleaseBundle(
            serverId: serverId,
            name: releaseBundleName,
            version: releaseBundleVersion,
            spec: releaseBundleSpec,
            signImmediately: true
    )

    stage "Distribute release bundle"
    dsDistributeReleaseBundle(
            serverId: serverId,
            name: releaseBundleName,
            version: releaseBundleVersion,
            distRules: distRules,
            sync: true
    )

    stage "Delete release bundle"
    dsDeleteReleaseBundle(
            serverId: serverId,
            name: releaseBundleName,
            version: releaseBundleVersion,
            distRules: distRules,
            sync: true,
            deleteFromDist: true
    )
}
