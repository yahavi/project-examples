package integration.pipelines.scripted

node("TestSlave") {
    stage "Configuration"
    def jfrogInstance = JFrog.newInstance url: "${env.JENKINS_PLATFORM_URL}", username: "${env.JENKINS_ARTIFACTORY_USERNAME}", password: "${env.JENKINS_ARTIFACTORY_PASSWORD}"
    def rtServer = jfrogInstance.artifactory
    def dsServer = jfrogInstance.distribution
    def releaseBundleName = "scripted:createDistributeDelete"
    def releaseBundleVersion = "1"

    stage "Upload"
    def uploadSpec = """{
      "files": [
        {
          "pattern": "${FILES_DIR}",
          "target": "${LOCAL_REPO1}/",
          "recursive": "false"
        }
     ]
    }"""
    rtServer.upload spec: uploadSpec

    stage "Create a release bundle"
    def releaseBundleSpec = """{
      "files": [
        {
          "pattern": "${LOCAL_REPO1}/"
        }
     ]
    }"""
    dsServer.createReleaseBundle name: releaseBundleName, version: releaseBundleVersion, spec: releaseBundleSpec, signImmediately: true


    def distRules = """{
      "distribution_rules": [
        {
          "site_name": "*",
          "city_name": "*",
          "country_codes": ["*"]
        }
      ]
    }"""
    stage "Distribute release bundle"
    dsServer.distributeReleaseBundle name: releaseBundleName, version: releaseBundleVersion, distRules: distRules, sync: true

    stage "Delete release bundle"
    dsServer.deleteReleaseBundle name: releaseBundleName, version: releaseBundleVersion, distRules: distRules, sync: true, deleteFromDist: true
}
